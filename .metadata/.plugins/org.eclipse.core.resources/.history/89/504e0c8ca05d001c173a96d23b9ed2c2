package chess;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

import javax.swing.JPanel;

public class OpponentPanel extends JPanel{

	private static final long serialVersionUID = 1L;
	public int width=800;
	public int height=100;
	public OpponentPanel()
	{
		//setPreferredSize(new Dimension(UIFrame.frameWidth, UIFrame.frameHeight/10));
		addsizeListener();
		
	}
	private void addsizeListener() {
		// TODO Auto-generated method stub
		addComponentListener(new ComponentAdapter() {
			@Override
			public void componentResized(ComponentEvent e) {
				width=getWidth();
				height=getHeight();
				System.out.println(width);
				System.out.println(height);
				repaint();
			}
			});
	}
	@Override
	public void paintComponents(Graphics g) {
		super.paintComponents(g);
		System.out.println("www");
		drawPanel(g);
	}
	private void drawPanel(Graphics g) {
		int color =Vars.c.getOtherColor();
		String text=" ";
		String mode=" ";
		if(color==Model.BLACK)
		{
			g.setColor(Color.BLACK);
			text="Black";
		}
		else if(color==Model.WHITE) {
			g.setColor(Color.WHITE);
			text="White";
		}
		g.drawOval(width/3, height/2, height/3, height/3);
		g.setColor(Color.BLACK);
		g.setFont(new Font("Arial", Font.PLAIN, 15+height/10));
		g.drawString(text, width/6, height/2);
		if (Vars.c.getMode()==Controller.SELF_PLAY) {
			mode="Self play";
		}
		else if (Vars.c.getMode()==Controller.SELF_PLAY) {
			mode="Play with AI";
		}
		else {
			mode="Play online";
		}
		g.setFont(new Font("Arial", Font.BOLD, 16+height/9));
		g.drawString(mode, 2*width/3, height/2);
	}
}
