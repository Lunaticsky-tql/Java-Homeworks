package chess;

public class Controller {

	public static final int SELF_PLAY=1;
	public static final int AI_PLAY=2;
	public static final int ONLINE_PLAY=3;
	public int mode=AI_PLAY;
	boolean openDoor=false;
	int localColor=Model.BLACK;
	int otherColor=Model.WHITE;
	int situation=SituationEvaluate.NOTHING;

	public void localPutChess(int row,int col) {
		if(!openDoor)
		{
			return;
		}
		boolean success=Vars.m.putChess(row,col,localColor);
		if(success) {
			Vars.v.repaint();
			situation=Vars.s.getSituation(row, col,localColor);
			int winner=Vars.m.whoWin(situation,localColor);
			if(winner==localColor)
			{
				
			}
			else {
				switch (mode) {
				case SELF_PLAY: {
					localColor=-localColor;
					otherColor=-otherColor;
					break;
				}
				case AI_PLAY:
				{
					callAI();
					openDoor=false;
					break;
				}
				case ONLINE_PLAY:
				{
					Vars.n.sendChess(row, col);
					openDoor=false;
					break;
				}
					
				default:
					break;
				}
			}
	
	}
	}
	private void callAI() {
		Vars.m.giveAIInformation();
		
	}
	public void netPutChess(int row,int col) {
		boolean success=Vars.m.putChess(row,col,otherColor);
		if(success) {
			Vars.v.repaint();
			situation=Vars.s.getSituation(row, col,otherColor);
			int winner=Vars.m.whoWin(situation,otherColor);
			if(winner==Model.BLACK)
			{
				
			}
		}
		openDoor=true;

	}
	public void AIPutChess(int row,int col) {
		boolean success=Vars.m.putChess(row,col,otherColor);
		if(success) {
			Vars.v.repaint();
			situation=Vars.s.getSituation(row, col,otherColor);
			int winner=Vars.m.whoWin(situation,otherColor);
			if(winner==Model.BLACK)
			{
				
			}
		}
		openDoor=true;

	}
	public void sendChatMessage(String text) {
		Vars.n.sendChatMessage(text);
		Vars.chat.addChatMessage(text);
	}
	public void otherSaySomething(String text) {
		Vars.chat.addChatMessage(text);
	}
	
	public int getMode() {
		return mode;
	}
	public void setMode(int mode) {
		judgeOpenDoor(mode);
		this.mode = mode;
	}
	private void judgeOpenDoor(int mode) {
	if(mode==SELF_PLAY||mode==AI_PLAY)
	{
		openDoor=true;
	}
	else {
		openDoor=false;
	}
	}
	public int getLocalColor() {
		return localColor;
	}

	public int getOtherColor() {
		return otherColor;
	}
	public void setOtherColor(int otherColor) {
		this.otherColor = otherColor;
	}
	public void handleGoBack() {
		// TODO Auto-generated method stub
		
	}
	public void handleResrart() {
		// TODO Auto-generated method stub
		
	}
	public void handleSeverClose() {
		
	}
	public void setFirstHand() {
		localColor=Model.BLACK;
		otherColor=Model.WHITE;
		Vars.m.initialize();
		openDoor=true;
	}
	public void setGoteHand() {
		localColor=Model.WHITE;
		otherColor=Model.BLACK;
		Vars.m.initialize();
		openDoor=false;
	}
}
